<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//make sure to destroy the test server 

if(instance_exists(obj_test_server))
{
    with(obj_test_server) {
        instance_destroy() ; 
    }
}

//create the server 

server = network_create_server(network_socket_tcp,global.port,4) ; 

player_buffer = buffer_create(163840,buffer_grow,1) ; 

clients = ds_map_create() ; // a map that contain the players and their sockets 
sockets = ds_list_create() ; // list of the connected Sockets 

global.curPlayers = 0 ; 
spectatores = 0 ; 
connectedClients = 0 ; 

if(global.isPublic)
{
    // send the data to the master server (MySQL Database)
}
serverType = "1vs1" ; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(ds_list_size(sockets) &gt; 0)
{

    global.player_buffer = player_buffer ; 
    
    var sprites = global.curPlayers ; 
    
    buffer_seek(player_buffer,buffer_seek_start,0) ;
    buffer_write(player_buffer,buffer_u8,sprites) ;  
    buffer_write(player_buffer,buffer_u8,global.curPlayers) ; 
    buffer_write(player_buffer,buffer_u8,connectedClients) ; 
    buffer_write(player_buffer,buffer_u8,spectatores) ; 
    buffer_write(player_buffer,buffer_string,serverType) ; 
    
    with(obj_remotePlayer)
    {
        buffer_write(global.player_buffer,buffer_u32,x) ; 
        buffer_write(global.player_buffer,buffer_u32,y) ; 
        buffer_write(global.player_buffer,buffer_u16,sprite_index) ; 
        buffer_write(global.player_buffer,buffer_u8,image_index) ; 
        buffer_write(global.player_buffer,buffer_s8,image_xscale) ;
        buffer_write(global.player_buffer,buffer_string,name) ;          
    }

    
        
    for(i = 0 ; i &lt; ds_list_size(sockets) ; i++)
    {
        var sock = ds_list_find_value(sockets,i) ;       
        network_send_packet(sock,player_buffer,buffer_tell(player_buffer)) ; 
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var event = ds_map_find_value(async_load,"id") ; 

if(server == event)
{
    scr_connect_disconnect() ; 
}
else
if(event == global.socket)
{
    // this is our local client 
    var ip = ds_map_find_value(async_load,"ip") ; 
    
    global.localip = ip ; 
}
else
{
    scr_recieve_data() ; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy(server) ; 
buffer_delete(player_buffer) ; 
ds_list_destroy(sockets) ; 
ds_map_destroy(clients) ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black) ; 
draw_text(0,0,"Buffer size :"+string(buffer_tell(player_buffer))) ; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
